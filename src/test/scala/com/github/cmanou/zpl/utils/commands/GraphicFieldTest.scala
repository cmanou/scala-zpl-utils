package com.github.cmanou.zpl.utils.commands

import com.github.cmanou.zpl.utils.commands.barcodes.{Code39, Code11}
import com.sksamuel.scrimage.Image
import org.scalatest._

class GraphicFieldTest extends FunSuite with BeforeAndAfter with OneInstancePerTest {

  test("to uncompressed zpl is valid") {
    val image = Image.fromStream(getClass.getResourceAsStream("/premonition_rgb.png"))
    val zplImage = GraphicField(image, image.width, image.height, compressed = false)

    assert(zplImage.zpl
  }

  test("to compressed zpl is valid") {
    val image = Image.fromStream(getClass.getResourceAsStream("/premonition_rgb.png"))
    val zplImage = GraphicField(image, image.width, image.height)

    assert(zplImage.zpl == "^GFA,639,639,9,,::::::::::L03FC,K01IF,K03IFC,K0JFE,J01KF,J01KF8,J03KFC,00NFCFF8,03QFE,03RF8,00RFC,003QFE,380QFE,3E03QF,7F80RF,7FC03QFC,IF807QF,IFE00QF8JF801PF8KF001OFCKFE003NFCLF8001MFEMF8I0LFE7MF8I03JFE7NFCJ01FFE,::0NFE,07MFL07F803LF8J07IF800KFCI03KF,00JFCI07KFC,00IFCI0MF,007FEI07LFE,007F8007MFC,003E003NFC,003801OF8,K0PF8,J03PF,I01PFE,I03PFC,I03PF8,J0PF,J07IFC7IFC,K0IF01IF,L0FI01F,,::::::::::::")
  }
}